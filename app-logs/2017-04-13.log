2017-04-13T00:06:46.791Z - info: ../routes/authorRoutes.js : 20 GET /authors
2017-04-13T00:06:46.792Z - info: ../routes/authorRoutes.js : 21 appConstants.USERS_JSON /Users/anandpotta/sri/book-inv-data-app/data/users.json
2017-04-13T00:06:46.796Z - info: ../routes/authorRoutes.js : 28 Success in getting authors info [ { _id: 58eab1ff2f5b5f1fb9829262,
    name: 'Saleh Hamadeh',
    rating: 4,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } },
  { _id: 58eab23c2f5b5f1fb9829264,
    name: 'Saleh Hamadeh',
    rating: 5,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } } ]
2017-04-13T01:15:44.880Z - info: ../routes/authorRoutes.js : 20 GET /authors
2017-04-13T01:15:44.880Z - info: ../routes/authorRoutes.js : 21 appConstants.USERS_JSON /Users/anandpotta/sri/book-inv-data-app/data/users.json
2017-04-13T01:15:44.884Z - info: ../routes/authorRoutes.js : 28 Success in getting authors info [ { _id: 58eab1ff2f5b5f1fb9829262,
    name: 'Saleh Hamadeh',
    rating: 4,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } },
  { _id: 58eab23c2f5b5f1fb9829264,
    name: 'Saleh Hamadeh',
    rating: 5,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } } ]
2017-04-13T01:15:44.885Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T01:15:44.887Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T01:15:46.675Z - info: ../routes/authorRoutes.js : 20 GET /authors
2017-04-13T01:15:46.675Z - info: ../routes/authorRoutes.js : 21 appConstants.USERS_JSON /Users/anandpotta/sri/book-inv-data-app/data/users.json
2017-04-13T01:15:46.679Z - info: ../routes/authorRoutes.js : 28 Success in getting authors info [ { _id: 58eab1ff2f5b5f1fb9829262,
    name: 'Saleh Hamadeh',
    rating: 4,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } },
  { _id: 58eab23c2f5b5f1fb9829264,
    name: 'Saleh Hamadeh',
    rating: 5,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } } ]
2017-04-13T01:15:46.680Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T01:15:46.682Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T01:16:50.051Z - info: ../routes/authorRoutes.js : 20 GET /authors
2017-04-13T01:16:50.052Z - info: ../routes/authorRoutes.js : 21 appConstants.USERS_JSON /Users/anandpotta/sri/book-inv-data-app/data/users.json
2017-04-13T01:16:50.057Z - info: ../routes/authorRoutes.js : 28 Success in getting authors info [ { _id: 58eab1ff2f5b5f1fb9829262,
    name: 'Saleh Hamadeh',
    rating: 4,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } },
  { _id: 58eab23c2f5b5f1fb9829264,
    name: 'Saleh Hamadeh',
    rating: 5,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } } ]
2017-04-13T01:16:50.059Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T01:16:50.061Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T01:31:05.791Z - info: ../routes/authorRoutes.js : 20 GET /authors
2017-04-13T01:31:05.792Z - info: ../routes/authorRoutes.js : 21 appConstants.USERS_JSON /Users/anandpotta/sri/book-inv-data-app/data/users.json
2017-04-13T01:31:05.795Z - info: ../routes/authorRoutes.js : 28 Success in getting authors info [ { _id: 58eab1ff2f5b5f1fb9829262,
    name: 'Saleh Hamadeh',
    rating: 4,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } },
  { _id: 58eab23c2f5b5f1fb9829264,
    name: 'Saleh Hamadeh',
    rating: 5,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } } ]
2017-04-13T01:31:05.797Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T01:31:05.799Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T01:33:41.465Z - info: ../routes/authorRoutes.js : 20 GET /authors
2017-04-13T01:33:41.466Z - info: ../routes/authorRoutes.js : 21 appConstants.USERS_JSON /Users/anandpotta/sri/book-inv-data-app/data/users.json
2017-04-13T01:33:41.469Z - info: ../routes/authorRoutes.js : 28 Success in getting authors info [ { _id: 58eab1ff2f5b5f1fb9829262,
    name: 'Saleh Hamadeh',
    rating: 4,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } },
  { _id: 58eab23c2f5b5f1fb9829264,
    name: 'Saleh Hamadeh',
    rating: 5,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } } ]
2017-04-13T01:33:41.470Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T01:33:41.472Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T01:35:18.790Z - info: ../routes/authorRoutes.js : 20 GET /authors
2017-04-13T01:35:18.790Z - info: ../routes/authorRoutes.js : 21 appConstants.USERS_JSON /Users/anandpotta/sri/book-inv-data-app/data/users.json
2017-04-13T01:35:18.794Z - info: ../routes/authorRoutes.js : 28 Success in getting authors info [ { _id: 58eab1ff2f5b5f1fb9829262,
    name: 'Saleh Hamadeh',
    rating: 4,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } },
  { _id: 58eab23c2f5b5f1fb9829264,
    name: 'Saleh Hamadeh',
    rating: 5,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } } ]
2017-04-13T01:35:18.796Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T01:35:18.798Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T01:36:53.034Z - info: ../routes/authorRoutes.js : 20 GET /authors
2017-04-13T01:36:53.034Z - info: ../routes/authorRoutes.js : 21 appConstants.USERS_JSON /Users/anandpotta/sri/book-inv-data-app/data/users.json
2017-04-13T01:36:53.037Z - info: ../routes/authorRoutes.js : 28 Success in getting authors info [ { _id: 58eab1ff2f5b5f1fb9829262,
    name: 'Saleh Hamadeh',
    rating: 4,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } },
  { _id: 58eab23c2f5b5f1fb9829264,
    name: 'Saleh Hamadeh',
    rating: 5,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } } ]
2017-04-13T01:36:53.038Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T01:36:53.040Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T01:37:36.857Z - info: ../routes/authorRoutes.js : 20 GET /authors
2017-04-13T01:37:36.857Z - info: ../routes/authorRoutes.js : 21 appConstants.USERS_JSON /Users/anandpotta/sri/book-inv-data-app/data/users.json
2017-04-13T01:37:36.860Z - info: ../routes/authorRoutes.js : 28 Success in getting authors info [ { _id: 58eab1ff2f5b5f1fb9829262,
    name: 'Saleh Hamadeh',
    rating: 4,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } },
  { _id: 58eab23c2f5b5f1fb9829264,
    name: 'Saleh Hamadeh',
    rating: 5,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } } ]
2017-04-13T01:37:36.863Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T01:37:36.864Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T01:39:57.839Z - info: ../routes/authorRoutes.js : 20 GET /authors
2017-04-13T01:39:57.840Z - info: ../routes/authorRoutes.js : 21 appConstants.USERS_JSON /Users/anandpotta/sri/book-inv-data-app/data/users.json
2017-04-13T01:39:57.853Z - info: ../routes/authorRoutes.js : 28 Success in getting authors info [ { _id: 58eab1ff2f5b5f1fb9829262,
    name: 'Saleh Hamadeh',
    rating: 4,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } },
  { _id: 58eab23c2f5b5f1fb9829264,
    name: 'Saleh Hamadeh',
    rating: 5,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } } ]
2017-04-13T01:39:57.855Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T01:39:57.859Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T01:42:13.500Z - info: ../routes/authorRoutes.js : 20 GET /authors
2017-04-13T01:42:13.501Z - info: ../routes/authorRoutes.js : 21 appConstants.USERS_JSON /Users/anandpotta/sri/book-inv-data-app/data/users.json
2017-04-13T01:42:13.504Z - info: ../routes/authorRoutes.js : 28 Success in getting authors info [ { _id: 58eab1ff2f5b5f1fb9829262,
    name: 'Saleh Hamadeh',
    rating: 4,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } },
  { _id: 58eab23c2f5b5f1fb9829264,
    name: 'Saleh Hamadeh',
    rating: 5,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } } ]
2017-04-13T01:42:13.506Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T01:42:13.509Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T01:42:43.167Z - info: ../routes/authorRoutes.js : 20 GET /authors
2017-04-13T01:42:43.168Z - info: ../routes/authorRoutes.js : 21 appConstants.USERS_JSON /Users/anandpotta/sri/book-inv-data-app/data/users.json
2017-04-13T01:42:43.175Z - info: ../routes/authorRoutes.js : 28 Success in getting authors info [ { _id: 58eab1ff2f5b5f1fb9829262,
    name: 'Saleh Hamadeh',
    rating: 4,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } },
  { _id: 58eab23c2f5b5f1fb9829264,
    name: 'Saleh Hamadeh',
    rating: 5,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } } ]
2017-04-13T01:42:43.178Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T01:42:43.181Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T01:43:46.479Z - info: ../routes/authorRoutes.js : 20 GET /authors
2017-04-13T01:43:46.479Z - info: ../routes/authorRoutes.js : 21 appConstants.USERS_JSON /Users/anandpotta/sri/book-inv-data-app/data/users.json
2017-04-13T01:43:46.484Z - info: ../routes/authorRoutes.js : 28 Success in getting authors info [ { _id: 58eab1ff2f5b5f1fb9829262,
    name: 'Saleh Hamadeh',
    rating: 4,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } },
  { _id: 58eab23c2f5b5f1fb9829264,
    name: 'Saleh Hamadeh',
    rating: 5,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } } ]
2017-04-13T01:43:46.485Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T01:43:46.488Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T01:45:52.153Z - info: ../routes/authorRoutes.js : 20 GET /authors
2017-04-13T01:45:52.154Z - info: ../routes/authorRoutes.js : 21 appConstants.USERS_JSON /Users/anandpotta/sri/book-inv-data-app/data/users.json
2017-04-13T01:45:52.157Z - info: ../routes/authorRoutes.js : 28 Success in getting authors info [ { _id: 58eab1ff2f5b5f1fb9829262,
    name: 'Saleh Hamadeh',
    rating: 4,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } },
  { _id: 58eab23c2f5b5f1fb9829264,
    name: 'Saleh Hamadeh',
    rating: 5,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } } ]
2017-04-13T01:45:52.161Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T01:45:52.165Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T01:50:34.803Z - info: ../routes/authorRoutes.js : 20 GET /authors
2017-04-13T01:50:34.804Z - info: ../routes/authorRoutes.js : 21 appConstants.USERS_JSON /Users/anandpotta/sri/book-inv-data-app/data/users.json
2017-04-13T01:50:34.807Z - info: ../routes/authorRoutes.js : 28 Success in getting authors info [ { _id: 58eab1ff2f5b5f1fb9829262,
    name: 'Saleh Hamadeh',
    rating: 4,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } },
  { _id: 58eab23c2f5b5f1fb9829264,
    name: 'Saleh Hamadeh',
    rating: 5,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } } ]
2017-04-13T01:50:34.820Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T01:50:34.823Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T01:57:45.349Z - info: db_connection.js : 31 connecting to booksDb
2017-04-13T01:57:45.388Z - info: db_connection.js : 39 connecting to authorBD
2017-04-13T01:57:45.389Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T01:57:45.395Z - info: db_connection.js : 47 connecting to userBD
2017-04-13T01:57:45.395Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T01:57:45.396Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T01:57:45.403Z - info: ../index.js : 18 App Started
2017-04-13T01:57:45.403Z - info: ../routes/bookRoutes.js : 15 in to Books routes init function
2017-04-13T01:57:45.405Z - info: ../routes/authorRoutes.js : 18 authors routes init functionality
2017-04-13T01:57:45.405Z - info: ../index.js : 22 -------------------- done ----------------------- 
2017-04-13T01:57:45.417Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T01:57:45.418Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T01:57:45.418Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T01:57:45.418Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T01:57:45.418Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T01:57:45.418Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T01:57:45.438Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/bookBD
2017-04-13T01:57:45.438Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/authorBD
2017-04-13T01:57:45.438Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/userBD
2017-04-13T02:00:21.633Z - info: db_connection.js : 31 connecting to booksDb
2017-04-13T02:00:21.667Z - info: db_connection.js : 39 connecting to authorBD
2017-04-13T02:00:21.668Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:00:21.672Z - info: db_connection.js : 47 connecting to userBD
2017-04-13T02:00:21.672Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:00:21.673Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:00:21.679Z - info: ../index.js : 18 App Started
2017-04-13T02:00:21.679Z - info: ../routes/bookRoutes.js : 15 in to Books routes init function
2017-04-13T02:00:21.681Z - info: ../routes/authorRoutes.js : 18 authors routes init functionality
2017-04-13T02:00:21.682Z - info: ../index.js : 22 -------------------- done ----------------------- 
2017-04-13T02:00:21.691Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:00:21.692Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:00:21.692Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:00:21.692Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:00:21.692Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:00:21.692Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:00:21.709Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/bookBD
2017-04-13T02:00:21.709Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/authorBD
2017-04-13T02:00:21.709Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/userBD
2017-04-13T02:00:31.722Z - info: db_connection.js : 31 connecting to booksDb
2017-04-13T02:00:31.750Z - info: db_connection.js : 39 connecting to authorBD
2017-04-13T02:00:31.751Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:00:31.755Z - info: db_connection.js : 47 connecting to userBD
2017-04-13T02:00:31.755Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:00:31.755Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:00:31.762Z - info: ../index.js : 18 App Started
2017-04-13T02:00:31.762Z - info: ../routes/bookRoutes.js : 15 in to Books routes init function
2017-04-13T02:00:31.763Z - info: ../routes/authorRoutes.js : 18 authors routes init functionality
2017-04-13T02:00:31.764Z - info: ../index.js : 22 -------------------- done ----------------------- 
2017-04-13T02:00:31.775Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:00:31.775Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:00:31.775Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:00:31.776Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:00:31.776Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:00:31.776Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:00:31.793Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/bookBD
2017-04-13T02:00:31.793Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/authorBD
2017-04-13T02:00:31.793Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/userBD
2017-04-13T02:03:07.403Z - info: db_connection.js : 31 connecting to booksDb
2017-04-13T02:03:07.430Z - info: db_connection.js : 39 connecting to authorBD
2017-04-13T02:03:07.431Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:03:07.435Z - info: db_connection.js : 47 connecting to userBD
2017-04-13T02:03:07.436Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:03:07.436Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:03:07.441Z - info: ../index.js : 18 App Started
2017-04-13T02:03:07.441Z - info: ../routes/bookRoutes.js : 15 in to Books routes init function
2017-04-13T02:03:07.443Z - info: ../routes/authorRoutes.js : 18 authors routes init functionality
2017-04-13T02:03:07.444Z - info: ../index.js : 22 -------------------- done ----------------------- 
2017-04-13T02:03:07.454Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:03:07.454Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:03:07.454Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:03:07.455Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:03:07.455Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:03:07.455Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:03:07.471Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/bookBD
2017-04-13T02:03:07.471Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/authorBD
2017-04-13T02:03:07.471Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/userBD
2017-04-13T02:03:13.153Z - info: db_connection.js : 31 connecting to booksDb
2017-04-13T02:03:13.181Z - info: db_connection.js : 39 connecting to authorBD
2017-04-13T02:03:13.183Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:03:13.186Z - info: db_connection.js : 47 connecting to userBD
2017-04-13T02:03:13.187Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:03:13.187Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:03:13.193Z - info: ../index.js : 18 App Started
2017-04-13T02:03:13.193Z - info: ../routes/bookRoutes.js : 15 in to Books routes init function
2017-04-13T02:03:13.195Z - info: ../routes/authorRoutes.js : 18 authors routes init functionality
2017-04-13T02:03:13.195Z - info: ../index.js : 22 -------------------- done ----------------------- 
2017-04-13T02:03:13.206Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:03:13.206Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:03:13.207Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:03:13.207Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:03:13.207Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:03:13.207Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:03:13.224Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/bookBD
2017-04-13T02:03:13.224Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/authorBD
2017-04-13T02:03:13.225Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/userBD
2017-04-13T02:05:17.294Z - info: db_connection.js : 31 connecting to booksDb
2017-04-13T02:05:17.319Z - info: db_connection.js : 39 connecting to authorBD
2017-04-13T02:05:17.320Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:05:17.323Z - info: db_connection.js : 47 connecting to userBD
2017-04-13T02:05:17.323Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:05:17.324Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:05:17.328Z - info: ../index.js : 18 App Started
2017-04-13T02:05:17.329Z - info: ../routes/bookRoutes.js : 15 in to Books routes init function
2017-04-13T02:05:17.331Z - info: ../routes/authorRoutes.js : 18 authors routes init functionality
2017-04-13T02:05:17.332Z - info: ../index.js : 22 -------------------- done ----------------------- 
2017-04-13T02:05:17.343Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:05:17.344Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:05:17.344Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:05:17.344Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:05:17.344Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:05:17.344Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:05:17.360Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/bookBD
2017-04-13T02:05:17.360Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/authorBD
2017-04-13T02:05:17.360Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/userBD
2017-04-13T02:09:19.280Z - info: db_connection.js : 31 connecting to booksDb
2017-04-13T02:09:19.307Z - info: db_connection.js : 39 connecting to authorBD
2017-04-13T02:09:19.308Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:09:19.312Z - info: db_connection.js : 47 connecting to userBD
2017-04-13T02:09:19.312Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:09:19.313Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:09:19.318Z - info: ../index.js : 18 App Started
2017-04-13T02:09:19.318Z - info: ../routes/bookRoutes.js : 15 in to Books routes init function
2017-04-13T02:09:19.319Z - info: ../routes/authorRoutes.js : 18 authors routes init functionality
2017-04-13T02:09:19.320Z - info: ../index.js : 22 -------------------- done ----------------------- 
2017-04-13T02:09:19.330Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:09:19.331Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:09:19.331Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:09:19.331Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:09:19.331Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:09:19.332Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:09:19.348Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/bookBD
2017-04-13T02:09:19.348Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/authorBD
2017-04-13T02:09:19.348Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/userBD
2017-04-13T02:09:33.116Z - info: db_connection.js : 31 connecting to booksDb
2017-04-13T02:09:33.145Z - info: db_connection.js : 39 connecting to authorBD
2017-04-13T02:09:33.146Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:09:33.149Z - info: db_connection.js : 47 connecting to userBD
2017-04-13T02:09:33.150Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:09:33.150Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:09:33.156Z - info: ../index.js : 18 App Started
2017-04-13T02:09:33.156Z - info: ../routes/bookRoutes.js : 15 in to Books routes init function
2017-04-13T02:09:33.158Z - info: ../routes/authorRoutes.js : 18 authors routes init functionality
2017-04-13T02:09:33.158Z - info: ../index.js : 22 -------------------- done ----------------------- 
2017-04-13T02:09:33.168Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:09:33.168Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:09:33.168Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:09:33.168Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:09:33.168Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:09:33.169Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:09:33.185Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/bookBD
2017-04-13T02:09:33.185Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/authorBD
2017-04-13T02:09:33.185Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/userBD
2017-04-13T02:10:44.320Z - info: db_connection.js : 31 connecting to booksDb
2017-04-13T02:10:44.345Z - info: db_connection.js : 39 connecting to authorBD
2017-04-13T02:10:44.346Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:44.350Z - info: db_connection.js : 47 connecting to userBD
2017-04-13T02:10:44.350Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:44.350Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:44.356Z - info: ../index.js : 18 App Started
2017-04-13T02:10:44.356Z - info: ../routes/bookRoutes.js : 15 in to Books routes init function
2017-04-13T02:10:44.358Z - info: ../routes/authorRoutes.js : 18 authors routes init functionality
2017-04-13T02:10:44.358Z - info: ../index.js : 22 -------------------- done ----------------------- 
2017-04-13T02:10:44.368Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:44.368Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:44.368Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:44.369Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:44.369Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:44.369Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:44.385Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/bookBD
2017-04-13T02:10:44.386Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/authorBD
2017-04-13T02:10:44.386Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/userBD
2017-04-13T02:10:48.607Z - info: db_connection.js : 31 connecting to booksDb
2017-04-13T02:10:48.633Z - info: db_connection.js : 39 connecting to authorBD
2017-04-13T02:10:48.634Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:48.637Z - info: db_connection.js : 47 connecting to userBD
2017-04-13T02:10:48.637Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:48.638Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:48.643Z - info: ../index.js : 18 App Started
2017-04-13T02:10:48.643Z - info: ../routes/bookRoutes.js : 15 in to Books routes init function
2017-04-13T02:10:48.644Z - info: ../routes/authorRoutes.js : 18 authors routes init functionality
2017-04-13T02:10:48.645Z - info: ../index.js : 22 -------------------- done ----------------------- 
2017-04-13T02:10:48.654Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:48.654Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:48.655Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:48.655Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:48.655Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:48.655Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:48.671Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/bookBD
2017-04-13T02:10:48.671Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/authorBD
2017-04-13T02:10:48.671Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/userBD
2017-04-13T02:10:55.731Z - info: db_connection.js : 31 connecting to booksDb
2017-04-13T02:10:55.758Z - info: db_connection.js : 39 connecting to authorBD
2017-04-13T02:10:55.759Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:55.762Z - info: db_connection.js : 47 connecting to userBD
2017-04-13T02:10:55.763Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:55.763Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:55.769Z - info: ../index.js : 18 App Started
2017-04-13T02:10:55.769Z - info: ../routes/bookRoutes.js : 15 in to Books routes init function
2017-04-13T02:10:55.771Z - info: ../routes/authorRoutes.js : 18 authors routes init functionality
2017-04-13T02:10:55.772Z - info: ../index.js : 22 -------------------- done ----------------------- 
2017-04-13T02:10:55.781Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:55.781Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:55.781Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:55.782Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:55.782Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:55.782Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:55.798Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/bookBD
2017-04-13T02:10:55.798Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/authorBD
2017-04-13T02:10:55.799Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/userBD
2017-04-13T02:10:57.311Z - info: db_connection.js : 31 connecting to booksDb
2017-04-13T02:10:57.337Z - info: db_connection.js : 39 connecting to authorBD
2017-04-13T02:10:57.338Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:57.341Z - info: db_connection.js : 47 connecting to userBD
2017-04-13T02:10:57.342Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:57.342Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:57.347Z - info: ../index.js : 18 App Started
2017-04-13T02:10:57.348Z - info: ../routes/bookRoutes.js : 15 in to Books routes init function
2017-04-13T02:10:57.349Z - info: ../routes/authorRoutes.js : 18 authors routes init functionality
2017-04-13T02:10:57.350Z - info: ../index.js : 22 -------------------- done ----------------------- 
2017-04-13T02:10:57.359Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:57.359Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:57.359Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:57.360Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:57.360Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:57.360Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:57.375Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/bookBD
2017-04-13T02:10:57.375Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/authorBD
2017-04-13T02:10:57.376Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/userBD
2017-04-13T02:10:59.961Z - info: db_connection.js : 31 connecting to booksDb
2017-04-13T02:10:59.989Z - info: db_connection.js : 39 connecting to authorBD
2017-04-13T02:10:59.990Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:59.993Z - info: db_connection.js : 47 connecting to userBD
2017-04-13T02:10:59.993Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:59.994Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:10:59.999Z - info: ../index.js : 18 App Started
2017-04-13T02:10:59.999Z - info: ../routes/bookRoutes.js : 15 in to Books routes init function
2017-04-13T02:11:00.001Z - info: ../routes/authorRoutes.js : 18 authors routes init functionality
2017-04-13T02:11:00.001Z - info: ../index.js : 22 -------------------- done ----------------------- 
2017-04-13T02:11:00.012Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:11:00.012Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:11:00.012Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:11:00.013Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:11:00.013Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:11:00.013Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:11:00.029Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/bookBD
2017-04-13T02:11:00.030Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/authorBD
2017-04-13T02:11:00.030Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/userBD
2017-04-13T02:11:31.423Z - info: db_connection.js : 31 connecting to booksDb
2017-04-13T02:11:31.448Z - info: db_connection.js : 39 connecting to authorBD
2017-04-13T02:11:31.449Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:11:31.453Z - info: db_connection.js : 47 connecting to userBD
2017-04-13T02:11:31.453Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:11:31.454Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:11:31.459Z - info: ../index.js : 18 App Started
2017-04-13T02:11:31.459Z - info: ../routes/bookRoutes.js : 15 in to Books routes init function
2017-04-13T02:11:31.461Z - info: ../routes/authorRoutes.js : 18 authors routes init functionality
2017-04-13T02:11:31.461Z - info: ../index.js : 22 -------------------- done ----------------------- 
2017-04-13T02:11:31.470Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:11:31.471Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:11:31.471Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:11:31.471Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:11:31.471Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:11:31.472Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:11:31.487Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/bookBD
2017-04-13T02:11:31.487Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/authorBD
2017-04-13T02:11:31.487Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/userBD
2017-04-13T02:12:29.055Z - info: ../routes/authorRoutes.js : 41 GET /author/58eab1ff2f5b5f1fb9829262
2017-04-13T02:12:29.073Z - info: ../routes/authorRoutes.js : 53 successfully received an author detail of  58eab1ff2f5b5f1fb9829262
2017-04-13T02:12:41.161Z - info: db_connection.js : 31 connecting to booksDb
2017-04-13T02:12:41.186Z - info: db_connection.js : 39 connecting to authorBD
2017-04-13T02:12:41.188Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:12:41.191Z - info: db_connection.js : 47 connecting to userBD
2017-04-13T02:12:41.191Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:12:41.191Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:12:41.197Z - info: ../index.js : 18 App Started
2017-04-13T02:12:41.197Z - info: ../routes/bookRoutes.js : 15 in to Books routes init function
2017-04-13T02:12:41.199Z - info: ../routes/authorRoutes.js : 18 authors routes init functionality
2017-04-13T02:12:41.199Z - info: ../index.js : 22 -------------------- done ----------------------- 
2017-04-13T02:12:41.209Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:12:41.209Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:12:41.209Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:12:41.209Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:12:41.209Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:12:41.210Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:12:41.225Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/bookBD
2017-04-13T02:12:41.225Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/authorBD
2017-04-13T02:12:41.225Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/userBD
2017-04-13T02:12:56.726Z - info: db_connection.js : 31 connecting to booksDb
2017-04-13T02:12:56.753Z - info: db_connection.js : 39 connecting to authorBD
2017-04-13T02:12:56.754Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:12:56.757Z - info: db_connection.js : 47 connecting to userBD
2017-04-13T02:12:56.758Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:12:56.758Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:12:56.763Z - info: ../index.js : 18 App Started
2017-04-13T02:12:56.763Z - info: ../routes/bookRoutes.js : 15 in to Books routes init function
2017-04-13T02:12:56.765Z - info: ../routes/authorRoutes.js : 18 authors routes init functionality
2017-04-13T02:12:56.766Z - info: ../index.js : 22 -------------------- done ----------------------- 
2017-04-13T02:12:56.775Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:12:56.775Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:12:56.776Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:12:56.776Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:12:56.776Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:12:56.776Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T02:12:56.792Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/bookBD
2017-04-13T02:12:56.792Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/authorBD
2017-04-13T02:12:56.793Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/userBD
2017-04-13T14:16:06.930Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T14:16:06.965Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T14:16:06.981Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T14:17:45.226Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T14:17:45.232Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T14:17:45.235Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T14:45:32.592Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T14:45:32.597Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T14:45:32.599Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T15:46:19.871Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T15:46:19.875Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T15:46:19.878Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T17:33:12.212Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T17:33:12.219Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T17:33:12.222Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T17:34:30.977Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T17:34:30.981Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T17:34:30.984Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T17:37:16.269Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T17:37:16.273Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T17:37:16.276Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T17:41:45.101Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T17:41:45.111Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T17:41:45.113Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T17:42:00.882Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T17:42:00.886Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T17:42:00.888Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T17:43:51.295Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T17:43:51.298Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T17:43:51.301Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T17:45:31.648Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T17:45:31.681Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T17:45:31.684Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T17:45:48.498Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T17:45:48.503Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T17:45:48.506Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T17:47:06.952Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T17:47:06.961Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T17:47:06.963Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T17:52:12.297Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T17:52:12.301Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T17:52:12.304Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T17:57:00.821Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T17:57:00.824Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T17:57:00.827Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T18:00:51.816Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T18:00:51.820Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T18:00:51.822Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T18:03:15.499Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T18:03:15.503Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T18:03:15.505Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T18:05:37.476Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T18:05:37.481Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T18:05:37.483Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T18:05:38.732Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T18:05:38.736Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T18:05:38.738Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T18:07:00.436Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T18:07:00.440Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T18:07:00.442Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T18:08:31.764Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T18:08:31.775Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T18:08:31.778Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T18:08:45.383Z - info: ../routes/bookRoutes.js : 27 GET /books
2017-04-13T18:08:45.386Z - info: ../routes/bookRoutes.js : 38 req Body in get call {}
2017-04-13T18:08:45.387Z - info: ../routes/bookRoutes.js : 40 Rendering success JSON data in  get call :-  strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$[0]["_doc"]["authors"], $ref=$[0], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[0], fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=167, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=128, id=string, name=Saleh Hamadeh], seller=[$ref=$[0]["_doc"]["seller"], $ref=$[0], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[0], fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=167, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=127, id=string, name=Packt Publishing], reviews=[$ref=$[0]["_doc"]["reviews"], $ref=$[0], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[0], fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=null, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=167, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=126, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=167, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=125, strictMode=true, $ref=$[0]["$__"]["selected"], shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$[1]["_doc"]["authors"], $ref=$[1], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[1], fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$[1]["_doc"]["seller"], $ref=$[1], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[1], fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$[1]["_doc"]["reviews"], $ref=$[1], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[1], fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T18:08:45.392Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T18:08:45.394Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T18:08:50.654Z - info: ../routes/bookRoutes.js : 27 GET /books
2017-04-13T18:08:50.663Z - info: ../routes/bookRoutes.js : 38 req Body in get call {}
2017-04-13T18:08:50.663Z - info: ../routes/bookRoutes.js : 40 Rendering success JSON data in  get call :-  strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$[0]["_doc"]["authors"], $ref=$[0], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[0], fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=167, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=128, id=string, name=Saleh Hamadeh], seller=[$ref=$[0]["_doc"]["seller"], $ref=$[0], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[0], fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=167, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=127, id=string, name=Packt Publishing], reviews=[$ref=$[0]["_doc"]["reviews"], $ref=$[0], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[0], fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=null, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=167, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=126, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=167, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=125, strictMode=true, $ref=$[0]["$__"]["selected"], shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$[1]["_doc"]["authors"], $ref=$[1], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[1], fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$[1]["_doc"]["seller"], $ref=$[1], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[1], fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$[1]["_doc"]["reviews"], $ref=$[1], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[1], fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T18:08:50.673Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T18:08:50.675Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T18:08:56.635Z - info: ../routes/bookRoutes.js : 27 GET /books
2017-04-13T18:08:56.639Z - info: ../routes/bookRoutes.js : 38 req Body in get call {}
2017-04-13T18:08:56.639Z - info: ../routes/bookRoutes.js : 40 Rendering success JSON data in  get call :-  strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$[0]["_doc"]["authors"], $ref=$[0], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[0], fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=167, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=128, id=string, name=Saleh Hamadeh], seller=[$ref=$[0]["_doc"]["seller"], $ref=$[0], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[0], fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=167, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=127, id=string, name=Packt Publishing], reviews=[$ref=$[0]["_doc"]["reviews"], $ref=$[0], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[0], fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=null, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=167, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=126, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=167, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=125, strictMode=true, $ref=$[0]["$__"]["selected"], shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$[1]["_doc"]["authors"], $ref=$[1], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[1], fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$[1]["_doc"]["seller"], $ref=$[1], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[1], fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$[1]["_doc"]["reviews"], $ref=$[1], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[1], fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T18:08:56.651Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T18:08:56.654Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T18:09:06.068Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T18:09:06.072Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T18:09:06.075Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T18:12:01.663Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T18:12:01.676Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T18:12:01.679Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T18:12:59.182Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T18:12:59.187Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T18:12:59.190Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T18:19:34.071Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T18:19:34.085Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T18:19:34.088Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T18:27:05.275Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T18:27:05.280Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T18:27:05.282Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T18:31:21.407Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T18:31:21.418Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T18:31:21.420Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T18:40:46.839Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T18:40:46.842Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T18:40:46.844Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T18:43:40.070Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T18:43:40.082Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T18:43:40.084Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T18:49:16.387Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T18:49:16.393Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T18:49:16.399Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T18:51:10.571Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T18:51:10.582Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T18:51:10.584Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T18:52:54.364Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T18:52:54.372Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T18:52:54.374Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T18:53:33.533Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T18:53:33.543Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T18:53:33.547Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T18:53:45.708Z - info: ../routes/bookRoutes.js : 27 GET /books
2017-04-13T18:53:45.711Z - info: ../routes/bookRoutes.js : 38 req Body in get call {}
2017-04-13T18:53:45.712Z - info: ../routes/bookRoutes.js : 40 Rendering success JSON data in  get call :-  strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$[0]["_doc"]["authors"], $ref=$[0], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[0], fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=167, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=128, id=string, name=Saleh Hamadeh], seller=[$ref=$[0]["_doc"]["seller"], $ref=$[0], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[0], fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=167, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=127, id=string, name=Packt Publishing], reviews=[$ref=$[0]["_doc"]["reviews"], $ref=$[0], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[0], fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=null, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=167, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=126, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=167, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=125, strictMode=true, $ref=$[0]["$__"]["selected"], shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$[1]["_doc"]["authors"], $ref=$[1], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[1], fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$[1]["_doc"]["seller"], $ref=$[1], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[1], fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$[1]["_doc"]["reviews"], $ref=$[1], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[1], fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T18:53:45.716Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T18:53:45.718Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T19:00:50.766Z - info: ../routes/bookRoutes.js : 27 GET /books
2017-04-13T19:00:50.769Z - info: ../routes/bookRoutes.js : 38 req Body in get call {}
2017-04-13T19:00:50.770Z - info: ../routes/bookRoutes.js : 40 Rendering success JSON data in  get call :-  strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$[0]["_doc"]["authors"], $ref=$[0], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[0], fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=167, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=128, id=string, name=Saleh Hamadeh], seller=[$ref=$[0]["_doc"]["seller"], $ref=$[0], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[0], fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=167, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=127, id=string, name=Packt Publishing], reviews=[$ref=$[0]["_doc"]["reviews"], $ref=$[0], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[0], fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=null, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=167, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=126, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=167, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=125, strictMode=true, $ref=$[0]["$__"]["selected"], shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$[1]["_doc"]["authors"], $ref=$[1], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[1], fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$[1]["_doc"]["seller"], $ref=$[1], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[1], fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$[1]["_doc"]["reviews"], $ref=$[1], __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$[0]["$__"]["activePaths"]["stateNames"], $ref=$[1], fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T19:00:50.780Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T19:00:50.782Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T19:01:26.392Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbaa730f66128b28c3a7d strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=167, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=128, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=167, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=127, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=null, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=167, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=126, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=167, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=125
2017-04-13T19:01:26.407Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T19:01:26.409Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T19:02:32.613Z - info: ../routes/authorRoutes.js : 20 GET /authors
2017-04-13T19:02:32.613Z - info: ../routes/authorRoutes.js : 21 appConstants.USERS_JSON /Users/anandpotta/sri/book-inv-data-app/data/users.json
2017-04-13T19:02:32.620Z - info: ../routes/authorRoutes.js : 28 Success in getting authors info [ { _id: 58eab1ff2f5b5f1fb9829262,
    name: 'Saleh Hamadeh',
    rating: 4,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } },
  { _id: 58eab23c2f5b5f1fb9829264,
    name: 'Saleh Hamadeh',
    rating: 5,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } } ]
2017-04-13T19:02:32.623Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T19:02:32.626Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T19:04:36.145Z - info: ../routes/authorRoutes.js : 20 GET /authors
2017-04-13T19:04:36.145Z - info: ../routes/authorRoutes.js : 21 appConstants.USERS_JSON /Users/anandpotta/sri/book-inv-data-app/data/users.json
2017-04-13T19:04:36.149Z - info: ../routes/authorRoutes.js : 28 Success in getting authors info [ { _id: 58eab1ff2f5b5f1fb9829262,
    name: 'Saleh Hamadeh',
    rating: 4,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } },
  { _id: 58eab23c2f5b5f1fb9829264,
    name: 'Saleh Hamadeh',
    rating: 5,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } } ]
2017-04-13T19:04:36.157Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T19:04:36.160Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T19:33:44.465Z - info: ../routes/authorRoutes.js : 20 GET /authors
2017-04-13T19:33:44.466Z - info: ../routes/authorRoutes.js : 21 appConstants.USERS_JSON /Users/anandpotta/sri/book-inv-data-app/data/users.json
2017-04-13T19:33:44.470Z - info: ../routes/authorRoutes.js : 28 Success in getting authors info [ { _id: 58eab1ff2f5b5f1fb9829262,
    name: 'Saleh Hamadeh',
    rating: 4,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } },
  { _id: 58eab23c2f5b5f1fb9829264,
    name: 'Saleh Hamadeh',
    rating: 5,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } } ]
2017-04-13T19:33:44.472Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T19:33:44.474Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T19:35:27.904Z - info: ../routes/authorRoutes.js : 20 GET /authors
2017-04-13T19:35:27.904Z - info: ../routes/authorRoutes.js : 21 appConstants.USERS_JSON /Users/anandpotta/sri/book-inv-data-app/data/users.json
2017-04-13T19:35:27.907Z - info: ../routes/authorRoutes.js : 28 Success in getting authors info [ { _id: 58eab1ff2f5b5f1fb9829262,
    name: 'Saleh Hamadeh',
    rating: 4,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } },
  { _id: 58eab23c2f5b5f1fb9829264,
    name: 'Saleh Hamadeh',
    rating: 5,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } } ]
2017-04-13T19:35:27.910Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T19:35:27.912Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T19:38:21.420Z - info: ../routes/authorRoutes.js : 20 GET /authors
2017-04-13T19:38:21.420Z - info: ../routes/authorRoutes.js : 21 appConstants.USERS_JSON /Users/anandpotta/sri/book-inv-data-app/data/users.json
2017-04-13T19:38:21.423Z - info: ../routes/authorRoutes.js : 28 Success in getting authors info [ { _id: 58eab1ff2f5b5f1fb9829262,
    name: 'Saleh Hamadeh',
    rating: 4,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } },
  { _id: 58eab23c2f5b5f1fb9829264,
    name: 'Saleh Hamadeh',
    rating: 5,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } } ]
2017-04-13T19:38:21.430Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T19:38:21.432Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T19:39:25.704Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T19:39:25.706Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T19:40:37.999Z - info: db_connection.js : 31 connecting to booksDb
2017-04-13T19:40:38.033Z - info: db_connection.js : 39 connecting to authorBD
2017-04-13T19:40:38.034Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T19:40:38.039Z - info: db_connection.js : 47 connecting to userBD
2017-04-13T19:40:38.040Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T19:40:38.040Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T19:40:38.046Z - info: ../index.js : 18 App Started
2017-04-13T19:40:38.047Z - info: ../routes/bookRoutes.js : 15 in to Books routes init function
2017-04-13T19:40:38.048Z - info: ../routes/authorRoutes.js : 18 authors routes init functionality
2017-04-13T19:40:38.049Z - info: ../index.js : 22 -------------------- done ----------------------- 
2017-04-13T19:40:38.059Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T19:40:38.059Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T19:40:38.059Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T19:40:38.059Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T19:40:38.060Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T19:40:38.060Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T19:40:38.081Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/bookBD
2017-04-13T19:40:38.082Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/authorBD
2017-04-13T19:40:38.082Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/userBD
2017-04-13T19:40:41.404Z - info: db_connection.js : 31 connecting to booksDb
2017-04-13T19:40:41.434Z - info: db_connection.js : 39 connecting to authorBD
2017-04-13T19:40:41.436Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T19:40:41.439Z - info: db_connection.js : 47 connecting to userBD
2017-04-13T19:40:41.440Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T19:40:41.440Z - error: db_connection.js : 63 Mongoose default connection error:  Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T19:40:41.448Z - info: ../index.js : 18 App Started
2017-04-13T19:40:41.448Z - info: ../routes/bookRoutes.js : 15 in to Books routes init function
2017-04-13T19:40:41.450Z - info: ../routes/authorRoutes.js : 18 authors routes init functionality
2017-04-13T19:40:41.450Z - info: ../index.js : 22 -------------------- done ----------------------- 
2017-04-13T19:40:41.461Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T19:40:41.461Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T19:40:41.461Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/authorRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:7:22)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T19:40:41.461Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T19:40:41.461Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T19:40:41.462Z - info: db_connection.js : 78 unhandledRejection Error: Trying to open unclosed connection.
    at NativeConnection.Connection.open (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/connection.js:240:11)
    at Mongoose.connect (/Users/anandpotta/sri/book-inv-data-app/node_modules/mongoose/lib/index.js:242:47)
    at Object.connectDB (/Users/anandpotta/sri/book-inv-data-app/src/utils/db_connection.js:55:12)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/routes/userRoutes.js:15:13)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.<anonymous> (/Users/anandpotta/sri/book-inv-data-app/src/index.js:8:20)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
2017-04-13T19:40:41.478Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/bookBD
2017-04-13T19:40:41.478Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/authorBD
2017-04-13T19:40:41.479Z - info: db_connection.js : 59 Mongoose default connection open to  mongodb://localhost/userBD
2017-04-13T19:40:49.380Z - info: ../routes/authorRoutes.js : 41 GET /authors/58ebbacb30f66128b28c3a81
2017-04-13T19:40:49.409Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T19:40:49.425Z - info: ../routes/authorRoutes.js : 53 successfully received an author detail of  58ebbacb30f66128b28c3a81
2017-04-13T19:40:49.461Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T19:40:56.512Z - info: ../routes/authorRoutes.js : 20 GET /authors
2017-04-13T19:40:56.513Z - info: ../routes/authorRoutes.js : 21 appConstants.USERS_JSON /Users/anandpotta/sri/book-inv-data-app/data/users.json
2017-04-13T19:40:56.522Z - info: ../routes/authorRoutes.js : 28 Success in getting authors info [ { _id: 58eab1ff2f5b5f1fb9829262,
    name: 'Saleh Hamadeh',
    rating: 4,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } },
  { _id: 58eab23c2f5b5f1fb9829264,
    name: 'Saleh Hamadeh',
    rating: 5,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } } ]
2017-04-13T19:40:56.524Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T19:40:56.530Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T19:41:11.096Z - info: ../routes/bookRoutes.js : 63 Succeed in getting the book with 58ebbacb30f66128b28c3a81 strictMode=true, , shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, tags=init, genres=init, authors=init, seller=init, reviews=init, __v=init, pages=init, deliveryCharges=init, price=init, publisher=init, publicationYear=init, description=init, title=init, _id=init, , , __v=true, tags=true, genres=true, authors=true, seller=true, reviews=true, pages=true, deliveryCharges=true, price=true, publisher=true, publicationYear=true, description=true, title=true, _id=true, , , stateNames=[require, modify, init, default, ignore], ownerDocument=undefined, fullPath=undefined, domain=null, save=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], isNew=[function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }, function notify(val) {
      var i = _this.length;
      while (i--) {
        if (!_this[i]) {
          continue;
        }
        switch (event) {
          // only swap for save event for now, we may change this to all event types later
          case 'save':
            val = _this[i];
            break;
          default:
            // NO-OP
            break;
        }
        _this[i].emit(event, val);
      }
    }], _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, tags=[], genres=[friction], bookCower=/images/id, authors=[$ref=$["_doc"]["authors"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=authors, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=132, id=string, name=Saleh Hamadeh], seller=[$ref=$["_doc"]["seller"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, id=init, name=init, _id=init, , , _id=true, id=true, name=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=seller, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=131, id=string, name=Packt Publishing], reviews=[$ref=$["_doc"]["reviews"], $ref=$, __index=0, strictMode=true, selected=undefined, shardval=undefined, saveError=undefined, validationError=undefined, adhocPaths=undefined, removing=undefined, inserting=undefined, version=undefined, , _id=undefined, populate=undefined, populated=undefined, wasPopulated=false, scope=undefined, reviewerRatingOutof=init, date=init, _id=init, feedback=init, reviewerRating=init, reviewerName=init, , , date=true, _id=true, feedback=true, reviewerRatingOutof=true, reviewerRating=true, reviewerName=true, , , $ref=$["$__"]["activePaths"]["stateNames"], $ref=$, fullPath=reviews, domain=null, isNew=function (val) {
    _this.isNew = val;
  }, save=function () {
    _this.constructor.emit('save', _this);
  }, _eventsCount=2, _maxListeners=0, isNew=false, errors=undefined, date=Mon Apr 10 2017 22:32:00 GMT+0530 (IST), _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=130, feedback=Good books to Learn, reviewerRatingOutof=5, reviewerRating=4.5, reviewerName=Srikanth], __v=0, pages=150, deliveryCharges=100, price=1200, publisher=Packt Publishing, publicationYear=2017, description=Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end. Explore the practical side of REST to build data-centric applications with Node About This Video Work through a series of guidelines and best practices to efficiently design RESTful Web APIs with Node Understand the structure of APIs, their authentication protocols, and their implementation tools This practical guide provides the knowledge you need to delve into the endless possibilities enabled by Big Data In Detail RESTful Web APIs allow developers to create unprecedented applications by leveraging the data on the internet., title=RESTful Web API Design with Node.js - Second Edition, _bsontype=ObjectID, 0=88, 1=235, 2=186, 3=203, 4=48, 5=246, 6=97, 7=40, 8=178, 9=140, 10=58, 11=129
2017-04-13T19:41:11.106Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T19:41:11.112Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T19:41:14.315Z - info: ../routes/authorRoutes.js : 20 GET /authors
2017-04-13T19:41:14.316Z - info: ../routes/authorRoutes.js : 21 appConstants.USERS_JSON /Users/anandpotta/sri/book-inv-data-app/data/users.json
2017-04-13T19:41:14.360Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T19:41:14.372Z - info: ../routes/authorRoutes.js : 28 Success in getting authors info [ { _id: 58eab1ff2f5b5f1fb9829262,
    name: 'Saleh Hamadeh',
    rating: 4,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } },
  { _id: 58eab23c2f5b5f1fb9829264,
    name: 'Saleh Hamadeh',
    rating: 5,
    biography: 'As the president of GT WebDev, I create the organization\'s semester schedule, lead weekly meetings, and manage communication with the College of Computing and the student population. In addition to that, I learn and teach others about web development principles. You can find some of my talks on GT WebDev\'s Youtube Channel. ',
    img: '/authors/Saleh Hamadeh',
    __v: 0,
    books: [ [Object] ],
    avatar: { img: '/authors/id' } } ]
2017-04-13T19:41:14.376Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
2017-04-13T19:41:16.970Z - info: ../routes/authorRoutes.js : 41 GET /authors/58ebbacb30f66128b28c3a81
2017-04-13T19:41:16.974Z - info: ../routes/authorRoutes.js : 53 successfully received an author detail of  58ebbacb30f66128b28c3a81
2017-04-13T19:41:16.981Z - info: ../routes/userRoutes.js : 28 GET /users
2017-04-13T19:41:16.987Z - info: ../routes/userRoutes.js : 35 Success in getting authors info [ { _id: 58ecfb4334a3fc34784a0678,
    name: 'Srikanth',
    password: '',
    __v: 0,
    cart: [ [Object] ] } ]
